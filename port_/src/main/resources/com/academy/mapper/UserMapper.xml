<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.academy.mapper.UserMapper">
	
	<!-- 검색 조건 -->
	<sql id="searchCondition">
		<if test="title != null">
			AND BOARD_TITLE LIKE '%' || #{title} || '%'
		</if>
	</sql>
	
	<!-- 메인 > 회원 수 조회 -->
	<select id="getUserCount" resultType="int">
		SELECT COUNT(*) FROM USERS_TBL
	</select>
	
	<!-- 메인 > 리뷰 수 조회 -->
	<select id="getReviewCount" resultType="int">
		SELECT COUNT(*) FROM REVIEW_TBL
	</select>
	
	<!-- 메인 > 학원 수 조회 -->
	<select id="getAcademyCount" resultType="int">
		SELECT COUNT(*) FROM ACADEMY_TBL
	</select>
	
	<!-- 가장 인기 많은 학원 TOP 4 조회 -->
	<select id="getMostPopularAcademyTop4" resultType="AdVO">
		<![CDATA[
			SELECT
			    ROWNUM                        AS RN,
			    NAME,
			    ADDR,
			    PRICE,
			    ( RATE1 + RATE2 + RATE3 ) / 3 AS RATE,
			    LINK
			FROM
			    (
			        SELECT
			            ACADEMY.NAME        AS NAME,
			            ACADEMY.ADDR        AS ADDR,
			            AD.PRICE            AS PRICE,
			            AVG(REVIEW.REVIEW1) AS RATE1,
			            AVG(REVIEW.REVIEW2) AS RATE2,
			            AVG(REVIEW.REVIEW3) AS RATE3,
			            AD.LINK             AS LINK
			        FROM
			            AD_TBL AD
			            LEFT JOIN ACADEMY_TBL ACADEMY   ON AD.ACADEMY_ID = ACADEMY.ID
			            LEFT JOIN REVIEW_TBL  REVIEW    ON AD.ACADEMY_ID = REVIEW.ACADEMY_ID
			        GROUP BY
			            ACADEMY.NAME,
			            ACADEMY.ADDR,
			            AD.PRICE,
			            AD.LINK
			        ORDER BY
			            AD.PRICE DESC
			    )
			WHERE
			    ROWNUM <= 4
		]]>
	</select>
	
	<!-- 메인 > 리뷰 조회(최신 리뷰 4개 조회) -->
	<select id="getReviewList" resultType="ReviewVO">
		<![CDATA[
			SELECT
			    *
			FROM
			    (
			        SELECT
			            ACADEMY.NAME          AS NAME,
			            REVIEW.REVIEW1        AS REVIEW1,
			            REVIEW.REVIEW2        AS REVIEW2,
			            REVIEW.REVIEW3        AS REVIEW3,
			            REVIEW.REVIEW_TITLE   AS REVIEW_TITLE,
			            REVIEW.REVIEW_CONTENT AS REVIEW_CONTENT,
			            REVIEW.REG_DATE       AS REG_DATE
			        FROM
			            REVIEW_TBL REVIEW
			            LEFT JOIN ACADEMY_TBL ACADEMY ON REVIEW.ACADEMY_ID = ACADEMY.ID
			        ORDER BY
			            REG_DATE DESC
			    )
			WHERE
			    ROWNUM <= 4
		]]>
	</select>
	
	<!-- 자료게시판 목록 조회 -->
	<select id="selectBoardsList" resultType="BoardVO">
		SELECT
			*
		FROM
			(
				SELECT
					ROWNUM RN,
					BOARD.*
				FROM
					(
						SELECT
							LEVEL,
							B.*,
							(SELECT COUNT(*) FROM ATTACH_TBL WHERE BOARD_NO = B.BOARD_NO) AS fileCount
						FROM
							BOARD_TBL B
						WHERE
							1 = 1
							<include refid="searchCondition" />
						START WITH PARENT_NO = 0
						CONNECT BY PRIOR BOARD_NO = PARENT_NO
						ORDER SIBLINGS BY BOARD_DATE DESC
					) BOARD
			)
	<![CDATA[
		WHERE
			(#{pageNum} - 1) * #{amount} < RN AND RN <= #{pageNum} * #{amount}
	]]>
	</select>
	
	<!-- 자료게시판 갯수 조회 -->
	<select id="selectBoardsCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_TBL
		WHERE 1 = 1
			  <include refid="searchCondition" />
	</select>
	
	<!-- 자료게시판 글 상세 조회 -->
	<select id="selectBoard" resultType="BoardVO">
		SELECT * FROM BOARD_TBL WHERE BOARD_NO = #{board_no}
	</select>
	
	<!-- 자료게시판 파일 상세 조회 -->
	<select id="selectBoardFiles" resultType="AttachVO">
		SELECT * FROM ATTACH_TBL WHERE BOARD_NO = #{board_no}
	</select>
	
	<!-- 자료게시판 일련번호 생성 -->
	<select id="selectNewBoardNo" resultType="int">
		SELECT BOARD_NO_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<!-- 자료게시판 글 등록 -->
	<insert id="insertBoard">
		INSERT INTO BOARD_TBL (
			BOARD_NO,
			BOARD_TITLE,
			BOARD_WRITER,
			BOARD_HIT,
			BOARD_DATE,
			BOARD_HIDDEN,
			PARENT_NO,
			BOARD_CONTENT
		) VALUES (
			#{board_no},
			#{board_title},
			#{board_writer},
			0,
			SYSDATE,
			0,
	<choose>
		<when test="parent_no == 0">
			0,
		</when>
		<otherwise>
			#{parent_no},
		</otherwise>
	</choose>
			#{board_content}
		)
	</insert>
	
	<!-- 자료게시판 글 수정 -->
	<update id="updateDataBoard">
		UPDATE BOARD_TBL
		SET BOARD_TITLE = #{board_title},
			BOARD_CONTENT = #{board_content}
		WHERE BOARD_NO = #{board_no}
	</update>
	
	<!-- 자료게시판 파일 등록 -->
	<insert id="insertBoardFiles">
		INSERT INTO ATTACH_TBL (
			UUID,
			UPLOAD_PATH,
			FILE_TYPE,
			FILE_NAME,
			BOARD_NO,
			REGDATE
		) VALUES (
			#{uuid},
			#{upload_path},
			#{file_type},
			#{file_name},
			#{board_no},
			SYSDATE
		)
	</insert>
	
	<!-- 자료게시판 파일 삭제 -->
	<delete id="deleteBoardFiles">
		DELETE FROM ATTACH_TBL
		WHERE UUID = #{uuid}
			  AND FILE_NAME = #{file_name}
			  AND BOARD_NO = #{board_no}
	</delete>
	
	<!-- 자료게시판 파일 삭제 -->
	<delete id="deleteBoardFile">
		DELETE FROM ATTACH_TBL
		WHERE BOARD_NO IN ( SELECT BOARD_NO
						  	FROM BOARD_TBL
						  	START WITH BOARD_NO = #{board_NO}
						  	CONNECT BY PRIOR BOARD_NO = PARENT_NO )
	</delete>
	
	<!-- 자료게시판 글 삭제 -->
	<delete id="deleteBoard">
		DELETE FROM BOARD_TBL
		WHERE BOARD_NO IN ( SELECT BOARD_NO
						  	FROM BOARD_TBL
						  	START WITH BOARD_NO = #{board_NO}
						  	CONNECT BY PRIOR BOARD_NO = PARENT_NO )
	</delete>
	
	<!-- 자료게시판 댓글 조회 -->
	<select id="selectBoardComments" resultType="CommentVO">
		<![CDATA[
			SELECT *
			FROM ( SELECT ROWNUM RN,
						  CMT.*
				   FROM ( SELECT LEVEL,
								 C.*
						  FROM COMMENT_TBL C
						  WHERE BOARD_NO = #{board_no}
						  START WITH PARENT_NO = 0
						  CONNECT BY PRIOR COMMENT_NO = PARENT_NO
						  ORDER SIBLINGS BY REG_DATE ) CMT )
			WHERE (#{pageNum} - 1) * #{amount} < RN AND RN <= #{pageNum} * #{amount}
		]]>
	</select>
	
	<!-- 자료게시판 댓글 갯수 조회 -->
	<select id="selectBoardCommentsCount" resultType="int">
		SELECT COUNT(*) FROM COMMENT_TBL WHERE BOARD_NO = #{board_no}
	</select>
	
	<!-- 자료게시판 댓글 추가 -->
	<insert id="insertBoardComment">
		INSERT INTO COMMENT_TBL (
			COMMENT_NO,
			PARENT_NO,
			BOARD_NO,
		    COMMENT_WRITER,
			CONTENT,
			REG_DATE
		) VALUES (
			#{comment_no},
	<choose>
		<when test="parent_no == 0">
			0,
		</when>
		<otherwise>
			#{parent_no},
		</otherwise>
	</choose>
			#{board_no},
			#{comment_writer},
			#{content},
			SYSDATE
		)
	</insert>
	
	<!-- 자료게시판 댓글 테이블 일련번호 생성 -->
	<select id="selectNewCommentNo" resultType="int">
		SELECT NVL(MAX(COMMENT_NO), 0) + 1 FROM COMMENT_TBL
	</select>
	
	<!-- 자료게시판 글 삭제 -->
	<delete id="deleteComment">
		DELETE FROM COMMENT_TBL
		WHERE COMMENT_NO IN ( SELECT COMMENT_NO
						  	  FROM COMMENT_TBL
						  	  START WITH COMMENT_NO = #{comment_no}
						  	  CONNECT BY PRIOR COMMENT_NO = PARENT_NO )
	</delete>
	
	<!-- 자료게시판 글 수정 -->
	<update id="updateComment">
		UPDATE COMMENT_TBL SET CONTENT = #{content} WHERE COMMENT_NO = #{comment_no}
	</update>
</mapper>
